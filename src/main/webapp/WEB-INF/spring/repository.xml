<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.databaseurl}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- these are C3P0 properties -->
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
    </bean>

    <util:map id="hibernateProperties">
        <entry key="hibernate.dialect" value="${hibernate.dialect}"/>
        <entry key="hibernate.show_sql" value="${hibernate.show_sql}"/>
        <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}"/>
        <entry key="hibernate.format_sql" value="true"/>
    </util:map>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="mappingResources">
            <list>
                <value>classpath:ru/imagebook/shared/model/Address.hbm.xml</value>
                <value>classpath:ru/saasengine/server/model/BeanStoreItem.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Bill.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/BonusAction.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/BonusCode.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Color.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Email.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Mailing.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Order.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/OrderFilter.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Phone.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Product.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Request.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Role.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/Settings.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/StatusRequest.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/User.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/UserAccount.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/UserAlbumDiscount.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/site/Banner.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/site/DirSection1.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/site/DirSection2.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/site/Folder.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/site/Phrase.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/site/Page.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/editor/Component.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/editor/EditorCounter.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/editor/Layout.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/editor/Page.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/editor/Notification.hbm.xml</value>
                <value>classpath:ru/imagebook/shared/model/ProductImage.hbm.xml</value>
            </list>
        </property>
        <property name="packagesToScan">
            <list>
                <value>ru.imagebook.shared.model</value>
                <value>ru.minogin.auth.shared.model.base</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven order="400"/>

    <bean class="org.springframework.orm.hibernate5.HibernateExceptionTranslator"/>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <jpa:repositories base-package="ru.imagebook.server.repository" />

    <bean id="actionRepository" class="ru.imagebook.server.repository.ActionRepositoryImpl"
          autowire="constructor"/>

    <bean id="authRepository" class="ru.imagebook.server.repository.AuthRepositoryImpl"
          autowire="constructor"/>

    <bean id="beanStoreRepository"
          class="ru.saasengine.server.repository.beanstore.BeanStoreRepositoryImpl"
          autowire="constructor"/>

    <bean id="billRepository" class="ru.imagebook.server.repository.BillRepositoryImpl"
          autowire="constructor"/>

    <bean id="calcRepository" class="ru.imagebook.server.repository.CalcRepositoryImpl"
          autowire="constructor"/>

    <bean id="cleanRepository" class="ru.imagebook.server.repository.CleanRepositoryImpl"
          autowire="constructor"/>

    <bean id="editorRepository" class="ru.imagebook.server.repository.EditorRepositoryImpl"
          autowire="constructor"/>

    <bean id="orderRepository" class="ru.imagebook.server.repository.OrderRepositoryImpl"
          autowire="constructor"/>

    <bean id="priceRepository" class="ru.imagebook.server.repository.PriceRepositoryImpl"
          autowire="constructor"/>

    <bean id="productRepository" class="ru.imagebook.server.repository.ProductRepositoryImpl"
          autowire="constructor"/>

    <bean id="deliveryDiscountRepository" class="ru.imagebook.server.repository.DeliveryDiscountRepositoryImpl"
          autowire="constructor"/>

    <bean id="requestRepository" class="ru.imagebook.server.repository.RequestRepositoryImpl"
          autowire="constructor"/>

    <bean id="sentRepository" class="ru.imagebook.server.repository.SentRepositoryImpl"
          autowire="constructor"/>

    <bean id="siteRepository" class="ru.imagebook.server.repository.SiteRepositoryImpl"
          autowire="constructor"/>

    <bean id="loadRepository" class="ru.imagebook.server.repository.LoadRepositoryImpl"
          autowire="constructor"/>

    <bean id="flashRepository" class="ru.imagebook.server.repository.FlashRepositoryImpl"
          autowire="constructor"/>

    <bean id="pdfRepository" class="ru.imagebook.server.repository.PdfRepositoryImpl"
          autowire="constructor"/>

    <bean id="updateRepository" class="ru.imagebook.server.repository.UpdateRepositoryImpl"
          autowire="constructor"/>

    <bean id="deliveryRepository" class="ru.imagebook.server.repository.DeliveryRepositoryImpl"
          autowire="constructor"/>

    <bean id="finishingRepository" class="ru.imagebook.server.repository.FinishingRepositoryImpl"
          autowire="constructor"/>

    <bean id="securityRepository" class="ru.imagebook.server.repository.SecurityRepositoryImpl"
          autowire="constructor"/>

    <bean id="userRepository" class="ru.imagebook.server.repository.UserRepositoryImpl"
          autowire="constructor"/>

    <bean id="vendorRepository" class="ru.imagebook.server.repository.VendorRepositoryImpl"
          autowire="constructor"/>

    <bean id="mailingRepository" class="ru.imagebook.server.repository.MailingRepositoryImpl"
          autowire="constructor"/>

    <bean id="questionRepository" class="ru.imagebook.server.repository.QuestionRepositoryImpl"
          autowire="constructor"/>

    <bean id="questionCategoryRepository" class="ru.imagebook.server.repository.QuestionCategoryRepositoryImpl"
          autowire="constructor"/>

    <bean id="feedbackRepository" class="ru.imagebook.server.repository.FeedbackRepositoryImpl"/>

    <bean id="feedbackAnswerRepository" class="ru.imagebook.server.repository.FeedbackAnswerRepositoryImpl"/>

    <bean id="propertyRepository" class="ru.imagebook.server.repository.PropertyRepositoryImpl"/>

    <bean id="recommendationRepository" class="ru.imagebook.server.repository.RecommendationRepositoryImpl"/>

    <bean id="feedbackUserRepositoryImpl" class="ru.imagebook.server.repository.FeedbackUserRepositoryImpl"/>

    <bean id="processRepository" class="ru.imagebook.server.repository.ProcessRepositoryImpl"/>

    <bean id="productImageRepository" class="ru.imagebook.server.repository.ProductImageRepositoryImpl"/>

    <!-- ************************************************************************************** -->

    <bean class="ru.imagebook.server.repository2.PdfTransferRepositoryImpl"
          autowire="constructor"/>

    <bean class="ru.imagebook.server.repository2.admin.SiteRepositoryImpl"/>

    <bean class="ru.imagebook.server.repository2.admin.TagRepositoryImpl"/>

    <bean class="ru.imagebook.server.repository2.weight.WeightRepositoryImpl"/>

    <bean class="ru.imagebook.server.repository2.admin.CountryRepositoryImpl"/>
    <bean class="ru.imagebook.server.repository2.admin.ZoneRepositoryImpl"/>
    <bean class="ru.imagebook.server.repository2.admin.RegionRepositoryImpl"/>
    <bean class="ru.imagebook.server.repository2.admin.DeliveryAssemblyRepositoryImpl"/>

    <bean class="ru.imagebook.server.repository2.FlashRepositoryImpl"/>

    <bean class="ru.minogin.auth.server.repository.SecurityRepositoryImpl">
        <constructor-arg>
            <value>ru.imagebook.shared.model.XUser</value>
        </constructor-arg>
    </bean>
</beans>